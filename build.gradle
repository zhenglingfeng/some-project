apply from: file("${rootDir}/gradle/project.gradle")
subprojects {
    group = 'demo'
    version = '1.0.0'

    repositories {
        maven {
            url 'https://neowu.github.io/maven-repo/'
//            url "http://maven.aliyun.com/nexus/content/groups/public/"
            content {
                includeGroupByRegex 'core\\.framework.*'
            }
        }
    }
}

def coreNGVersion = '7.2.1'
def hsqlVersion = '2.5.0'

configure(subprojects.findAll { it.name.matches('.*-interface') }) {
    dependencies {
        implementation "core.framework:core-ng-api:${coreNGVersion}"
    }
}

configure(subprojects.findAll { it.name.endsWith('-db-migration') }) {
    apply from: file("${rootDir}/gradle/db-migration.gradle")

    dependencies {
        runtimeOnly 'mysql:mysql-connector-java:8.0.17'
    }
}

configure(subprojects.findAll { it.name.endsWith('-mongo-migration') }) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        implementation "core.framework:core-ng-mongo:${coreNGVersion}"
    }
    tasks.register('mongoMigrate') {
        dependsOn run
    }
}

configure([project(':some-service'),project(':back-office'),project(':web-site'),project(':some-async')
           ,project(':async-subscribe-one'),project(':async-subscribe-two')]) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        testImplementation "core.framework:core-ng-test:${coreNGVersion}"
    }
}

project(':some-service') {
    dependencies {
        implementation project(':some-interface')
        implementation "core.framework:core-ng-mongo:${coreNGVersion}"
        implementation 'de.bwaldvogel:mongo-java-server:1.23.0'
        runtimeOnly 'mysql:mysql-connector-java:8.0.17'
        testRuntimeOnly "org.hsqldb:hsqldb:${hsqlVersion}"
    }
}

project(':back-office') {
    dependencies {
        implementation project(':some-interface')
        implementation project(':back-office-interface')
    }
}

project(':web-site') {
    dependencies {
    }
}

project(':some-async') {
    dependencies {
        implementation project(':async-interface')
    }
}

project(':async-subscribe-one') {
    dependencies {
        implementation project(':async-interface')
    }
}

project(':async-subscribe-two') {
    dependencies {
        implementation project(':async-interface')
    }
}